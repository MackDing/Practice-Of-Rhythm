{
	"id": "50086f71e44f43bcbfcf7cf8a26613ef",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"solidityByExample/contract/011Loop.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\n\ncontract ForWhile {\n    function ForLoop(uint _x) public pure returns(uint) {\n        uint numa = 0;\n\n        for(uint i = 0; i <= _x; i++){\n            numa += i;\n        }\n        return numa;\n    }\n\n    function whileLoop() public pure returns (uint) {\n        uint x = 255;\n\n        while (x < 256) {\n            x++;\n            return x; // 直接返回 x+1，因为循环只会运行一次\n        }\n        return x; // 冗余的返回值以防止编译器警告\n    }\n\n    function loop() public pure returns(uint, uint) {\n        uint numa = 0;\n        for(uint i = 0; i < 10; i++) {\n            if (i < 3){\n                continue; \n            }if (i > 5){\n                break;\n            } numa = i;\n        uint j = 0;\n\n        while (j < 10) {\n            j++;\n        }\n        return (numa, j);\n        }\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"solidityByExample/contract/011Loop.sol": {
				"ForWhile": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_x",
									"type": "uint256"
								}
							],
							"name": "ForLoop",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "loop",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "whileLoop",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"solidityByExample/contract/011Loop.sol\":59:892  contract ForWhile {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"solidityByExample/contract/011Loop.sol\":59:892  contract ForWhile {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9cc8e419\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa92100cb\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe7c898ef\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"solidityByExample/contract/011Loop.sol\":83:259  function ForLoop(uint _x) public pure returns(uint) {... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solidityByExample/contract/011Loop.sol\":541:890  function loop() public pure returns(uint, uint) {... */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap3\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solidityByExample/contract/011Loop.sol\":265:535  function whileLoop() public pure returns (uint) {... */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solidityByExample/contract/011Loop.sol\":83:259  function ForLoop(uint _x) public pure returns(uint) {... */\n    tag_9:\n        /* \"solidityByExample/contract/011Loop.sol\":129:133  uint */\n      0x00\n        /* \"solidityByExample/contract/011Loop.sol\":145:154  uint numa */\n      dup1\n        /* \"solidityByExample/contract/011Loop.sol\":157:158  0 */\n      0x00\n        /* \"solidityByExample/contract/011Loop.sol\":145:158  uint numa = 0 */\n      swap1\n      pop\n        /* \"solidityByExample/contract/011Loop.sol\":173:179  uint i */\n      0x00\n        /* \"solidityByExample/contract/011Loop.sol\":169:232  for(uint i = 0; i <= _x; i++){... */\n    tag_20:\n        /* \"solidityByExample/contract/011Loop.sol\":190:192  _x */\n      dup4\n        /* \"solidityByExample/contract/011Loop.sol\":185:186  i */\n      dup2\n        /* \"solidityByExample/contract/011Loop.sol\":185:192  i <= _x */\n      gt\n        /* \"solidityByExample/contract/011Loop.sol\":169:232  for(uint i = 0; i <= _x; i++){... */\n      tag_21\n      jumpi\n        /* \"solidityByExample/contract/011Loop.sol\":220:221  i */\n      dup1\n        /* \"solidityByExample/contract/011Loop.sol\":212:221  numa += i */\n      dup3\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      swap2\n      pop\n        /* \"solidityByExample/contract/011Loop.sol\":194:197  i++ */\n      dup1\n      dup1\n      tag_25\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      swap2\n      pop\n      pop\n        /* \"solidityByExample/contract/011Loop.sol\":169:232  for(uint i = 0; i <= _x; i++){... */\n      jump(tag_20)\n    tag_21:\n      pop\n        /* \"solidityByExample/contract/011Loop.sol\":248:252  numa */\n      dup1\n        /* \"solidityByExample/contract/011Loop.sol\":241:252  return numa */\n      swap2\n      pop\n      pop\n        /* \"solidityByExample/contract/011Loop.sol\":83:259  function ForLoop(uint _x) public pure returns(uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"solidityByExample/contract/011Loop.sol\":541:890  function loop() public pure returns(uint, uint) {... */\n    tag_13:\n        /* \"solidityByExample/contract/011Loop.sol\":577:581  uint */\n      0x00\n        /* \"solidityByExample/contract/011Loop.sol\":583:587  uint */\n      dup1\n        /* \"solidityByExample/contract/011Loop.sol\":599:608  uint numa */\n      0x00\n        /* \"solidityByExample/contract/011Loop.sol\":626:632  uint i */\n      dup1\n        /* \"solidityByExample/contract/011Loop.sol\":622:884  for(uint i = 0; i < 10; i++) {... */\n    tag_28:\n        /* \"solidityByExample/contract/011Loop.sol\":642:644  10 */\n      0x0a\n        /* \"solidityByExample/contract/011Loop.sol\":638:639  i */\n      dup2\n        /* \"solidityByExample/contract/011Loop.sol\":638:644  i < 10 */\n      lt\n        /* \"solidityByExample/contract/011Loop.sol\":622:884  for(uint i = 0; i < 10; i++) {... */\n      iszero\n      tag_29\n      jumpi\n        /* \"solidityByExample/contract/011Loop.sol\":673:674  3 */\n      0x03\n        /* \"solidityByExample/contract/011Loop.sol\":669:670  i */\n      dup2\n        /* \"solidityByExample/contract/011Loop.sol\":669:674  i < 3 */\n      lt\n        /* \"solidityByExample/contract/011Loop.sol\":693:701  continue */\n      tag_30\n        /* \"solidityByExample/contract/011Loop.sol\":665:717  if (i < 3){... */\n      jumpi\n        /* \"solidityByExample/contract/011Loop.sol\":725:726  5 */\n      0x05\n        /* \"solidityByExample/contract/011Loop.sol\":721:722  i */\n      dup2\n        /* \"solidityByExample/contract/011Loop.sol\":721:726  i > 5 */\n      gt\n        /* \"solidityByExample/contract/011Loop.sol\":745:750  break */\n      tag_29\n        /* \"solidityByExample/contract/011Loop.sol\":717:765  if (i > 5){... */\n      jumpi\n        /* \"solidityByExample/contract/011Loop.sol\":773:774  i */\n      dup1\n        /* \"solidityByExample/contract/011Loop.sol\":766:774  numa = i */\n      swap2\n      pop\n        /* \"solidityByExample/contract/011Loop.sol\":784:790  uint j */\n      0x00\n        /* \"solidityByExample/contract/011Loop.sol\":805:848  while (j < 10) {... */\n    tag_33:\n        /* \"solidityByExample/contract/011Loop.sol\":816:818  10 */\n      0x0a\n        /* \"solidityByExample/contract/011Loop.sol\":812:813  j */\n      dup2\n        /* \"solidityByExample/contract/011Loop.sol\":812:818  j < 10 */\n      lt\n        /* \"solidityByExample/contract/011Loop.sol\":805:848  while (j < 10) {... */\n      iszero\n      tag_34\n      jumpi\n        /* \"solidityByExample/contract/011Loop.sol\":834:837  j++ */\n      dup1\n      dup1\n      tag_35\n      swap1\n      tag_26\n      jump\t// in\n    tag_35:\n      swap2\n      pop\n      pop\n        /* \"solidityByExample/contract/011Loop.sol\":805:848  while (j < 10) {... */\n      jump(tag_33)\n    tag_34:\n        /* \"solidityByExample/contract/011Loop.sol\":865:869  numa */\n      dup3\n        /* \"solidityByExample/contract/011Loop.sol\":871:872  j */\n      dup2\n        /* \"solidityByExample/contract/011Loop.sol\":857:873  return (numa, j) */\n      swap5\n      pop\n      swap5\n      pop\n      pop\n      pop\n      pop\n      jump(tag_27)\n        /* \"solidityByExample/contract/011Loop.sol\":622:884  for(uint i = 0; i < 10; i++) {... */\n    tag_30:\n        /* \"solidityByExample/contract/011Loop.sol\":646:649  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"solidityByExample/contract/011Loop.sol\":622:884  for(uint i = 0; i < 10; i++) {... */\n      jump(tag_28)\n    tag_29:\n      pop\n        /* \"solidityByExample/contract/011Loop.sol\":589:890  {... */\n      pop\n        /* \"solidityByExample/contract/011Loop.sol\":541:890  function loop() public pure returns(uint, uint) {... */\n    tag_27:\n      swap1\n      swap2\n      jump\t// out\n        /* \"solidityByExample/contract/011Loop.sol\":265:535  function whileLoop() public pure returns (uint) {... */\n    tag_17:\n        /* \"solidityByExample/contract/011Loop.sol\":307:311  uint */\n      0x00\n        /* \"solidityByExample/contract/011Loop.sol\":323:329  uint x */\n      dup1\n        /* \"solidityByExample/contract/011Loop.sol\":332:335  255 */\n      0xff\n        /* \"solidityByExample/contract/011Loop.sol\":323:335  uint x = 255 */\n      swap1\n      pop\n        /* \"solidityByExample/contract/011Loop.sol\":357:360  256 */\n      0x0100\n        /* \"solidityByExample/contract/011Loop.sol\":353:354  x */\n      dup2\n        /* \"solidityByExample/contract/011Loop.sol\":353:360  x < 256 */\n      lt\n        /* \"solidityByExample/contract/011Loop.sol\":346:465  while (x < 256) {... */\n      iszero\n      tag_38\n      jumpi\n        /* \"solidityByExample/contract/011Loop.sol\":376:379  x++ */\n      dup1\n      dup1\n      tag_39\n      swap1\n      tag_26\n      jump\t// in\n    tag_39:\n      swap2\n      pop\n      pop\n        /* \"solidityByExample/contract/011Loop.sol\":400:401  x */\n      dup1\n        /* \"solidityByExample/contract/011Loop.sol\":393:401  return x */\n      swap2\n      pop\n      pop\n      jump(tag_36)\n        /* \"solidityByExample/contract/011Loop.sol\":346:465  while (x < 256) {... */\n    tag_38:\n        /* \"solidityByExample/contract/011Loop.sol\":481:482  x */\n      dup1\n        /* \"solidityByExample/contract/011Loop.sol\":474:482  return x */\n      swap2\n      pop\n      pop\n        /* \"solidityByExample/contract/011Loop.sol\":265:535  function whileLoop() public pure returns (uint) {... */\n    tag_36:\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_41:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_43:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_44:\n        /* \"#utility.yul\":490:514   */\n      tag_54\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_43\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_55\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_55:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_45:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_57\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_44\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_8:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_59\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_60\n      tag_41\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":766:885   */\n    tag_59:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_61\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_45\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_46:\n        /* \"#utility.yul\":1112:1136   */\n      tag_63\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_43\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_11:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_65\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_46\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1709   */\n    tag_15:\n        /* \"#utility.yul\":1498:1502   */\n      0x00\n        /* \"#utility.yul\":1536:1538   */\n      0x40\n        /* \"#utility.yul\":1525:1534   */\n      dup3\n        /* \"#utility.yul\":1521:1539   */\n      add\n        /* \"#utility.yul\":1513:1539   */\n      swap1\n      pop\n        /* \"#utility.yul\":1549:1620   */\n      tag_67\n        /* \"#utility.yul\":1617:1618   */\n      0x00\n        /* \"#utility.yul\":1606:1615   */\n      dup4\n        /* \"#utility.yul\":1602:1619   */\n      add\n        /* \"#utility.yul\":1593:1599   */\n      dup6\n        /* \"#utility.yul\":1549:1620   */\n      tag_46\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1630:1702   */\n      tag_68\n        /* \"#utility.yul\":1698:1700   */\n      0x20\n        /* \"#utility.yul\":1687:1696   */\n      dup4\n        /* \"#utility.yul\":1683:1701   */\n      add\n        /* \"#utility.yul\":1674:1680   */\n      dup5\n        /* \"#utility.yul\":1630:1702   */\n      tag_46\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1377:1709   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1715:1895   */\n    tag_47:\n        /* \"#utility.yul\":1763:1840   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1760:1761   */\n      0x00\n        /* \"#utility.yul\":1753:1841   */\n      mstore\n        /* \"#utility.yul\":1860:1864   */\n      0x11\n        /* \"#utility.yul\":1857:1858   */\n      0x04\n        /* \"#utility.yul\":1850:1865   */\n      mstore\n        /* \"#utility.yul\":1884:1888   */\n      0x24\n        /* \"#utility.yul\":1881:1882   */\n      0x00\n        /* \"#utility.yul\":1874:1889   */\n      revert\n        /* \"#utility.yul\":1901:2092   */\n    tag_24:\n        /* \"#utility.yul\":1941:1944   */\n      0x00\n        /* \"#utility.yul\":1960:1980   */\n      tag_71\n        /* \"#utility.yul\":1978:1979   */\n      dup3\n        /* \"#utility.yul\":1960:1980   */\n      tag_43\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1955:1980   */\n      swap2\n      pop\n        /* \"#utility.yul\":1994:2014   */\n      tag_72\n        /* \"#utility.yul\":2012:2013   */\n      dup4\n        /* \"#utility.yul\":1994:2014   */\n      tag_43\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1989:2014   */\n      swap3\n      pop\n        /* \"#utility.yul\":2037:2038   */\n      dup3\n        /* \"#utility.yul\":2034:2035   */\n      dup3\n        /* \"#utility.yul\":2030:2039   */\n      add\n        /* \"#utility.yul\":2023:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":2058:2061   */\n      dup1\n        /* \"#utility.yul\":2055:2056   */\n      dup3\n        /* \"#utility.yul\":2052:2062   */\n      gt\n        /* \"#utility.yul\":2049:2085   */\n      iszero\n      tag_73\n      jumpi\n        /* \"#utility.yul\":2065:2083   */\n      tag_74\n      tag_47\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":2049:2085   */\n    tag_73:\n        /* \"#utility.yul\":1901:2092   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2098:2331   */\n    tag_26:\n        /* \"#utility.yul\":2137:2140   */\n      0x00\n        /* \"#utility.yul\":2160:2184   */\n      tag_76\n        /* \"#utility.yul\":2178:2183   */\n      dup3\n        /* \"#utility.yul\":2160:2184   */\n      tag_43\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2151:2184   */\n      swap2\n      pop\n        /* \"#utility.yul\":2206:2272   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2199:2204   */\n      dup3\n        /* \"#utility.yul\":2196:2273   */\n      sub\n        /* \"#utility.yul\":2193:2296   */\n      tag_77\n      jumpi\n        /* \"#utility.yul\":2276:2294   */\n      tag_78\n      tag_47\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":2193:2296   */\n    tag_77:\n        /* \"#utility.yul\":2323:2324   */\n      0x01\n        /* \"#utility.yul\":2316:2321   */\n      dup3\n        /* \"#utility.yul\":2312:2325   */\n      add\n        /* \"#utility.yul\":2305:2325   */\n      swap1\n      pop\n        /* \"#utility.yul\":2098:2331   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220515eed9ee5e2d11eb5dcc91d00afac8d3e375551b55ca246c93a823583912d6d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506103078061001c5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c80639cc8e41914610043578063a92100cb14610073578063e7c898ef14610092575b5f80fd5b61005d600480360381019061005891906101b0565b6100b0565b60405161006a91906101ea565b60405180910390f35b61007b6100e9565b604051610089929190610203565b60405180910390f35b61009a61014a565b6040516100a791906101ea565b60405180910390f35b5f805f90505f5b8381116100df5780826100ca9190610257565b915080806100d79061028a565b9150506100b7565b5080915050919050565b5f805f805b600a81101561014357600381106101365760058111610143578091505f5b600a8110156101285780806101209061028a565b91505061010c565b828194509450505050610146565b80806001019150506100ee565b50505b9091565b5f8060ff90506101008110156101715780806101659061028a565b91505080915050610176565b809150505b90565b5f80fd5b5f819050919050565b61018f8161017d565b8114610199575f80fd5b50565b5f813590506101aa81610186565b92915050565b5f602082840312156101c5576101c4610179565b5b5f6101d28482850161019c565b91505092915050565b6101e48161017d565b82525050565b5f6020820190506101fd5f8301846101db565b92915050565b5f6040820190506102165f8301856101db565b61022360208301846101db565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6102618261017d565b915061026c8361017d565b92508282019050808211156102845761028361022a565b5b92915050565b5f6102948261017d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036102c6576102c561022a565b5b60018201905091905056fea2646970667358221220515eed9ee5e2d11eb5dcc91d00afac8d3e375551b55ca246c93a823583912d6d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9CC8E419 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xA92100CB EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0xE7C898EF EQ PUSH2 0x92 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x1B0 JUMP JUMPDEST PUSH2 0xB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A SWAP2 SWAP1 PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH2 0xE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x89 SWAP3 SWAP2 SWAP1 PUSH2 0x203 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9A PUSH2 0x14A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA7 SWAP2 SWAP1 PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 JUMPDEST DUP4 DUP2 GT PUSH2 0xDF JUMPI DUP1 DUP3 PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x257 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0xD7 SWAP1 PUSH2 0x28A JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB7 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x143 JUMPI PUSH1 0x3 DUP2 LT PUSH2 0x136 JUMPI PUSH1 0x5 DUP2 GT PUSH2 0x143 JUMPI DUP1 SWAP2 POP PUSH0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x128 JUMPI DUP1 DUP1 PUSH2 0x120 SWAP1 PUSH2 0x28A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10C JUMP JUMPDEST DUP3 DUP2 SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x146 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xEE JUMP JUMPDEST POP POP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xFF SWAP1 POP PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x171 JUMPI DUP1 DUP1 PUSH2 0x165 SWAP1 PUSH2 0x28A JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP PUSH2 0x176 JUMP JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18F DUP2 PUSH2 0x17D JUMP JUMPDEST DUP2 EQ PUSH2 0x199 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AA DUP2 PUSH2 0x186 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C5 JUMPI PUSH2 0x1C4 PUSH2 0x179 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D2 DUP5 DUP3 DUP6 ADD PUSH2 0x19C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E4 DUP2 PUSH2 0x17D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FD PUSH0 DUP4 ADD DUP5 PUSH2 0x1DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x216 PUSH0 DUP4 ADD DUP6 PUSH2 0x1DB JUMP JUMPDEST PUSH2 0x223 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1DB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x261 DUP3 PUSH2 0x17D JUMP JUMPDEST SWAP2 POP PUSH2 0x26C DUP4 PUSH2 0x17D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x284 JUMPI PUSH2 0x283 PUSH2 0x22A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x294 DUP3 PUSH2 0x17D JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2C6 JUMPI PUSH2 0x2C5 PUSH2 0x22A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD MCOPY 0xED SWAP15 0xE5 0xE2 0xD1 0x1E 0xB5 0xDC 0xC9 SAR STOP 0xAF 0xAC DUP14 RETURNDATACOPY CALLDATACOPY SSTORE MLOAD 0xB5 TLOAD LOG2 CHAINID 0xC9 GASPRICE DUP3 CALLDATALOAD DUP4 SWAP2 0x2D PUSH14 0x64736F6C634300081A0033000000 ",
							"sourceMap": "59:833:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ForLoop_31": {
									"entryPoint": 176,
									"id": 31,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@loop_109": {
									"entryPoint": 233,
									"id": 109,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@whileLoop_53": {
									"entryPoint": 330,
									"id": 53,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 515,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 650,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 554,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 377,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2334:1",
										"nodeType": "YulBlock",
										"src": "0:2334:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:32:1",
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nativeSrc": "389:16:1",
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:1",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nativeSrc": "460:79:1",
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:1",
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:1",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:1",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nativeSrc": "519:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nativeSrc": "519:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nativeSrc": "490:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nativeSrc": "480:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nativeSrc": "473:43:1",
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nativeSrc": "470:63:1",
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:1",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nativeSrc": "597:87:1",
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nativeSrc": "607:29:1",
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nativeSrc": "616:20:1",
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nativeSrc": "645:33:1",
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nativeSrc": "645:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:1",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:1",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:1",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nativeSrc": "756:263:1",
													"nodeType": "YulBlock",
													"src": "756:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:1",
																"nodeType": "YulBlock",
																"src": "802:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:1"
																			},
																			"nativeSrc": "804:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:1"
																		},
																		"nativeSrc": "804:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:1"
																		},
																		"nativeSrc": "773:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:1",
																		"nodeType": "YulLiteral",
																		"src": "798:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:1"
																},
																"nativeSrc": "769:32:1",
																"nodeType": "YulFunctionCall",
																"src": "769:32:1"
															},
															"nativeSrc": "766:119:1",
															"nodeType": "YulIf",
															"src": "766:119:1"
														},
														{
															"nativeSrc": "895:117:1",
															"nodeType": "YulBlock",
															"src": "895:117:1",
															"statements": [
																{
																	"nativeSrc": "910:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:1",
																		"nodeType": "YulLiteral",
																		"src": "924:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:1",
																			"nodeType": "YulTypedName",
																			"src": "914:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:1",
																	"nodeType": "YulAssignment",
																	"src": "939:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:1"
																				},
																				"nativeSrc": "970:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:1"
																		},
																		"nativeSrc": "949:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:1",
														"nodeType": "YulTypedName",
														"src": "726:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:1",
														"nodeType": "YulTypedName",
														"src": "737:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:1",
														"nodeType": "YulTypedName",
														"src": "749:6:1",
														"type": ""
													}
												],
												"src": "690:329:1"
											},
											{
												"body": {
													"nativeSrc": "1090:53:1",
													"nodeType": "YulBlock",
													"src": "1090:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1107:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1130:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1112:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:1"
																		},
																		"nativeSrc": "1112:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1100:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:1"
																},
																"nativeSrc": "1100:37:1",
																"nodeType": "YulFunctionCall",
																"src": "1100:37:1"
															},
															"nativeSrc": "1100:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1025:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1078:5:1",
														"nodeType": "YulTypedName",
														"src": "1078:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1085:3:1",
														"nodeType": "YulTypedName",
														"src": "1085:3:1",
														"type": ""
													}
												],
												"src": "1025:118:1"
											},
											{
												"body": {
													"nativeSrc": "1247:124:1",
													"nodeType": "YulBlock",
													"src": "1247:124:1",
													"statements": [
														{
															"nativeSrc": "1257:26:1",
															"nodeType": "YulAssignment",
															"src": "1257:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1269:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1280:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1265:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:1"
																},
																"nativeSrc": "1265:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1265:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1257:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1337:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1350:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1361:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1346:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:1"
																		},
																		"nativeSrc": "1346:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1293:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:1"
																},
																"nativeSrc": "1293:71:1",
																"nodeType": "YulFunctionCall",
																"src": "1293:71:1"
															},
															"nativeSrc": "1293:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1149:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1219:9:1",
														"nodeType": "YulTypedName",
														"src": "1219:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1231:6:1",
														"nodeType": "YulTypedName",
														"src": "1231:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1242:4:1",
														"nodeType": "YulTypedName",
														"src": "1242:4:1",
														"type": ""
													}
												],
												"src": "1149:222:1"
											},
											{
												"body": {
													"nativeSrc": "1503:206:1",
													"nodeType": "YulBlock",
													"src": "1503:206:1",
													"statements": [
														{
															"nativeSrc": "1513:26:1",
															"nodeType": "YulAssignment",
															"src": "1513:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1525:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1525:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1536:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1536:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1521:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1521:3:1"
																},
																"nativeSrc": "1521:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1521:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1513:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1513:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1593:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1593:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1606:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1606:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1617:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1617:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1602:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1602:3:1"
																		},
																		"nativeSrc": "1602:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1602:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1549:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1549:43:1"
																},
																"nativeSrc": "1549:71:1",
																"nodeType": "YulFunctionCall",
																"src": "1549:71:1"
															},
															"nativeSrc": "1549:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "1549:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "1674:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1674:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1687:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1687:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1698:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1698:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1683:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1683:3:1"
																		},
																		"nativeSrc": "1683:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1683:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1630:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1630:43:1"
																},
																"nativeSrc": "1630:72:1",
																"nodeType": "YulFunctionCall",
																"src": "1630:72:1"
															},
															"nativeSrc": "1630:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "1630:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "1377:332:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1467:9:1",
														"nodeType": "YulTypedName",
														"src": "1467:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1479:6:1",
														"nodeType": "YulTypedName",
														"src": "1479:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1487:6:1",
														"nodeType": "YulTypedName",
														"src": "1487:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1498:4:1",
														"nodeType": "YulTypedName",
														"src": "1498:4:1",
														"type": ""
													}
												],
												"src": "1377:332:1"
											},
											{
												"body": {
													"nativeSrc": "1743:152:1",
													"nodeType": "YulBlock",
													"src": "1743:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1760:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1763:77:1",
																		"nodeType": "YulLiteral",
																		"src": "1763:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1753:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1753:6:1"
																},
																"nativeSrc": "1753:88:1",
																"nodeType": "YulFunctionCall",
																"src": "1753:88:1"
															},
															"nativeSrc": "1753:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "1753:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1857:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1857:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1860:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1860:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1850:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1850:6:1"
																},
																"nativeSrc": "1850:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1850:15:1"
															},
															"nativeSrc": "1850:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1850:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1881:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1881:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1884:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1884:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1874:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1874:6:1"
																},
																"nativeSrc": "1874:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1874:15:1"
															},
															"nativeSrc": "1874:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1874:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "1715:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1715:180:1"
											},
											{
												"body": {
													"nativeSrc": "1945:147:1",
													"nodeType": "YulBlock",
													"src": "1945:147:1",
													"statements": [
														{
															"nativeSrc": "1955:25:1",
															"nodeType": "YulAssignment",
															"src": "1955:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1978:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1978:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1960:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1960:17:1"
																},
																"nativeSrc": "1960:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1960:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "1955:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "1955:1:1"
																}
															]
														},
														{
															"nativeSrc": "1989:25:1",
															"nodeType": "YulAssignment",
															"src": "1989:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2012:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2012:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1994:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1994:17:1"
																},
																"nativeSrc": "1994:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1994:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "1989:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "1989:1:1"
																}
															]
														},
														{
															"nativeSrc": "2023:16:1",
															"nodeType": "YulAssignment",
															"src": "2023:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2034:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2034:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2037:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2037:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2030:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2030:3:1"
																},
																"nativeSrc": "2030:9:1",
																"nodeType": "YulFunctionCall",
																"src": "2030:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2023:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2023:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2063:22:1",
																"nodeType": "YulBlock",
																"src": "2063:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2065:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "2065:16:1"
																			},
																			"nativeSrc": "2065:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2065:18:1"
																		},
																		"nativeSrc": "2065:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2065:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2055:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2055:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2058:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2058:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2052:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2052:2:1"
																},
																"nativeSrc": "2052:10:1",
																"nodeType": "YulFunctionCall",
																"src": "2052:10:1"
															},
															"nativeSrc": "2049:36:1",
															"nodeType": "YulIf",
															"src": "2049:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "1901:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1932:1:1",
														"nodeType": "YulTypedName",
														"src": "1932:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1935:1:1",
														"nodeType": "YulTypedName",
														"src": "1935:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "1941:3:1",
														"nodeType": "YulTypedName",
														"src": "1941:3:1",
														"type": ""
													}
												],
												"src": "1901:191:1"
											},
											{
												"body": {
													"nativeSrc": "2141:190:1",
													"nodeType": "YulBlock",
													"src": "2141:190:1",
													"statements": [
														{
															"nativeSrc": "2151:33:1",
															"nodeType": "YulAssignment",
															"src": "2151:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2178:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2178:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2160:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "2160:17:1"
																},
																"nativeSrc": "2160:24:1",
																"nodeType": "YulFunctionCall",
																"src": "2160:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2151:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2151:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2274:22:1",
																"nodeType": "YulBlock",
																"src": "2274:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2276:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "2276:16:1"
																			},
																			"nativeSrc": "2276:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2276:18:1"
																		},
																		"nativeSrc": "2276:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2276:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2199:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2199:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2206:66:1",
																		"nodeType": "YulLiteral",
																		"src": "2206:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2196:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2196:2:1"
																},
																"nativeSrc": "2196:77:1",
																"nodeType": "YulFunctionCall",
																"src": "2196:77:1"
															},
															"nativeSrc": "2193:103:1",
															"nodeType": "YulIf",
															"src": "2193:103:1"
														},
														{
															"nativeSrc": "2305:20:1",
															"nodeType": "YulAssignment",
															"src": "2305:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2316:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2316:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2323:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2323:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2312:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2312:3:1"
																},
																"nativeSrc": "2312:13:1",
																"nodeType": "YulFunctionCall",
																"src": "2312:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2305:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2305:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "2098:233:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2127:5:1",
														"nodeType": "YulTypedName",
														"src": "2127:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2137:3:1",
														"nodeType": "YulTypedName",
														"src": "2137:3:1",
														"type": ""
													}
												],
												"src": "2098:233:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c80639cc8e41914610043578063a92100cb14610073578063e7c898ef14610092575b5f80fd5b61005d600480360381019061005891906101b0565b6100b0565b60405161006a91906101ea565b60405180910390f35b61007b6100e9565b604051610089929190610203565b60405180910390f35b61009a61014a565b6040516100a791906101ea565b60405180910390f35b5f805f90505f5b8381116100df5780826100ca9190610257565b915080806100d79061028a565b9150506100b7565b5080915050919050565b5f805f805b600a81101561014357600381106101365760058111610143578091505f5b600a8110156101285780806101209061028a565b91505061010c565b828194509450505050610146565b80806001019150506100ee565b50505b9091565b5f8060ff90506101008110156101715780806101659061028a565b91505080915050610176565b809150505b90565b5f80fd5b5f819050919050565b61018f8161017d565b8114610199575f80fd5b50565b5f813590506101aa81610186565b92915050565b5f602082840312156101c5576101c4610179565b5b5f6101d28482850161019c565b91505092915050565b6101e48161017d565b82525050565b5f6020820190506101fd5f8301846101db565b92915050565b5f6040820190506102165f8301856101db565b61022360208301846101db565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6102618261017d565b915061026c8361017d565b92508282019050808211156102845761028361022a565b5b92915050565b5f6102948261017d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036102c6576102c561022a565b5b60018201905091905056fea2646970667358221220515eed9ee5e2d11eb5dcc91d00afac8d3e375551b55ca246c93a823583912d6d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9CC8E419 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xA92100CB EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0xE7C898EF EQ PUSH2 0x92 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x1B0 JUMP JUMPDEST PUSH2 0xB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A SWAP2 SWAP1 PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH2 0xE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x89 SWAP3 SWAP2 SWAP1 PUSH2 0x203 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9A PUSH2 0x14A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA7 SWAP2 SWAP1 PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 JUMPDEST DUP4 DUP2 GT PUSH2 0xDF JUMPI DUP1 DUP3 PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x257 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0xD7 SWAP1 PUSH2 0x28A JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB7 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x143 JUMPI PUSH1 0x3 DUP2 LT PUSH2 0x136 JUMPI PUSH1 0x5 DUP2 GT PUSH2 0x143 JUMPI DUP1 SWAP2 POP PUSH0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x128 JUMPI DUP1 DUP1 PUSH2 0x120 SWAP1 PUSH2 0x28A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10C JUMP JUMPDEST DUP3 DUP2 SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x146 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xEE JUMP JUMPDEST POP POP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xFF SWAP1 POP PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x171 JUMPI DUP1 DUP1 PUSH2 0x165 SWAP1 PUSH2 0x28A JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP PUSH2 0x176 JUMP JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18F DUP2 PUSH2 0x17D JUMP JUMPDEST DUP2 EQ PUSH2 0x199 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AA DUP2 PUSH2 0x186 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C5 JUMPI PUSH2 0x1C4 PUSH2 0x179 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D2 DUP5 DUP3 DUP6 ADD PUSH2 0x19C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E4 DUP2 PUSH2 0x17D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FD PUSH0 DUP4 ADD DUP5 PUSH2 0x1DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x216 PUSH0 DUP4 ADD DUP6 PUSH2 0x1DB JUMP JUMPDEST PUSH2 0x223 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1DB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x261 DUP3 PUSH2 0x17D JUMP JUMPDEST SWAP2 POP PUSH2 0x26C DUP4 PUSH2 0x17D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x284 JUMPI PUSH2 0x283 PUSH2 0x22A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x294 DUP3 PUSH2 0x17D JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2C6 JUMPI PUSH2 0x2C5 PUSH2 0x22A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD MCOPY 0xED SWAP15 0xE5 0xE2 0xD1 0x1E 0xB5 0xDC 0xC9 SAR STOP 0xAF 0xAC DUP14 RETURNDATACOPY CALLDATACOPY SSTORE MLOAD 0xB5 TLOAD LOG2 CHAINID 0xC9 GASPRICE DUP3 CALLDATALOAD DUP4 SWAP2 0x2D PUSH14 0x64736F6C634300081A0033000000 ",
							"sourceMap": "59:833:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;83:176;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;541:349;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;265:270;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;83:176;129:4;145:9;157:1;145:13;;173:6;169:63;190:2;185:1;:7;169:63;;220:1;212:9;;;;;:::i;:::-;;;194:3;;;;;:::i;:::-;;;;169:63;;;;248:4;241:11;;;83:176;;;:::o;541:349::-;577:4;583;599:9;626:6;622:262;642:2;638:1;:6;622:262;;;673:1;669;:5;693:8;665:52;725:1;721;:5;745;717:48;773:1;766:8;;784:6;805:43;816:2;812:1;:6;805:43;;;834:3;;;;;:::i;:::-;;;;805:43;;;865:4;871:1;857:16;;;;;;;;;622:262;646:3;;;;;;;622:262;;;;589:301;541:349;;;:::o;265:270::-;307:4;323:6;332:3;323:12;;357:3;353:1;:7;346:119;;;376:3;;;;;:::i;:::-;;;;400:1;393:8;;;;;346:119;481:1;474:8;;;265:270;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:332::-;1498:4;1536:2;1525:9;1521:18;1513:26;;1549:71;1617:1;1606:9;1602:17;1593:6;1549:71;:::i;:::-;1630:72;1698:2;1687:9;1683:18;1674:6;1630:72;:::i;:::-;1377:332;;;;;:::o;1715:180::-;1763:77;1760:1;1753:88;1860:4;1857:1;1850:15;1884:4;1881:1;1874:15;1901:191;1941:3;1960:20;1978:1;1960:20;:::i;:::-;1955:25;;1994:20;2012:1;1994:20;:::i;:::-;1989:25;;2037:1;2034;2030:9;2023:16;;2058:3;2055:1;2052:10;2049:36;;;2065:18;;:::i;:::-;2049:36;1901:191;;;;:::o;2098:233::-;2137:3;2160:24;2178:5;2160:24;:::i;:::-;2151:33;;2206:66;2199:5;2196:77;2193:103;;2276:18;;:::i;:::-;2193:103;2323:1;2316:5;2312:13;2305:20;;2098:233;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "155000",
								"executionCost": "200",
								"totalCost": "155200"
							},
							"external": {
								"ForLoop(uint256)": "infinite",
								"loop()": "infinite",
								"whileLoop()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 59,
									"end": 892,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 59,
									"end": 892,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 59,
									"end": 892,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 59,
									"end": 892,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 59,
									"end": 892,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 59,
									"end": 892,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 59,
									"end": 892,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 59,
									"end": 892,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 59,
									"end": 892,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 892,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 59,
									"end": 892,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 59,
									"end": 892,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 59,
									"end": 892,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 59,
									"end": 892,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 59,
									"end": 892,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 892,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 59,
									"end": 892,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 892,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 892,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 59,
									"end": 892,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 892,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220515eed9ee5e2d11eb5dcc91d00afac8d3e375551b55ca246c93a823583912d6d64736f6c634300081a0033",
									".code": [
										{
											"begin": 59,
											"end": 892,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 59,
											"end": 892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59,
											"end": 892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59,
											"end": 892,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 59,
											"end": 892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59,
											"end": 892,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59,
											"end": 892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59,
											"end": 892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59,
											"end": 892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59,
											"end": 892,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59,
											"end": 892,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59,
											"end": 892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59,
											"end": 892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59,
											"end": 892,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59,
											"end": 892,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 59,
											"end": 892,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 59,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 59,
											"end": 892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59,
											"end": 892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59,
											"end": 892,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 59,
											"end": 892,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 59,
											"end": 892,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 59,
											"end": 892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59,
											"end": 892,
											"name": "PUSH",
											"source": 0,
											"value": "9CC8E419"
										},
										{
											"begin": 59,
											"end": 892,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 59,
											"end": 892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59,
											"end": 892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59,
											"end": 892,
											"name": "PUSH",
											"source": 0,
											"value": "A92100CB"
										},
										{
											"begin": 59,
											"end": 892,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59,
											"end": 892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59,
											"end": 892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59,
											"end": 892,
											"name": "PUSH",
											"source": 0,
											"value": "E7C898EF"
										},
										{
											"begin": 59,
											"end": 892,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 59,
											"end": 892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59,
											"end": 892,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 59,
											"end": 892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59,
											"end": 892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59,
											"end": 892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59,
											"end": 892,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 83,
											"end": 259,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 83,
											"end": 259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 83,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 83,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 83,
											"end": 259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 83,
											"end": 259,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 83,
											"end": 259,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 83,
											"end": 259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 83,
											"end": 259,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 83,
											"end": 259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 83,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 83,
											"end": 259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 83,
											"end": 259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 83,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 83,
											"end": 259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 83,
											"end": 259,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 83,
											"end": 259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 83,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 83,
											"end": 259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 83,
											"end": 259,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 83,
											"end": 259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 83,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 83,
											"end": 259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 83,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 83,
											"end": 259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 83,
											"end": 259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 83,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 83,
											"end": 259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 83,
											"end": 259,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 83,
											"end": 259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 83,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 83,
											"end": 259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 83,
											"end": 259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 83,
											"end": 259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 83,
											"end": 259,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 83,
											"end": 259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 83,
											"end": 259,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 541,
											"end": 890,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 541,
											"end": 890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 541,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 541,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 541,
											"end": 890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 541,
											"end": 890,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 541,
											"end": 890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 541,
											"end": 890,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 541,
											"end": 890,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 541,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 541,
											"end": 890,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 541,
											"end": 890,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 541,
											"end": 890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 541,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 541,
											"end": 890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 541,
											"end": 890,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 541,
											"end": 890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 541,
											"end": 890,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 541,
											"end": 890,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 541,
											"end": 890,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 541,
											"end": 890,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 541,
											"end": 890,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 541,
											"end": 890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 541,
											"end": 890,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 265,
											"end": 535,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 265,
											"end": 535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 265,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 265,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 265,
											"end": 535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 265,
											"end": 535,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 265,
											"end": 535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 265,
											"end": 535,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 265,
											"end": 535,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 265,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 265,
											"end": 535,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 265,
											"end": 535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 265,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 265,
											"end": 535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 265,
											"end": 535,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 265,
											"end": 535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 265,
											"end": 535,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 265,
											"end": 535,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 265,
											"end": 535,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 265,
											"end": 535,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 265,
											"end": 535,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 265,
											"end": 535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 265,
											"end": 535,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 83,
											"end": 259,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 83,
											"end": 259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 129,
											"end": 133,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 145,
											"end": 158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 173,
											"end": 179,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 232,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 169,
											"end": 232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 190,
											"end": 192,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 185,
											"end": 186,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 185,
											"end": 192,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 169,
											"end": 232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 169,
											"end": 232,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 220,
											"end": 221,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 221,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 212,
											"end": 221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 212,
											"end": 221,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 212,
											"end": 221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 212,
											"end": 221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 212,
											"end": 221,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 212,
											"end": 221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 212,
											"end": 221,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 212,
											"end": 221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 194,
											"end": 197,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 194,
											"end": 197,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 194,
											"end": 197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 194,
											"end": 197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 194,
											"end": 197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 194,
											"end": 197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 194,
											"end": 197,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 194,
											"end": 197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 194,
											"end": 197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 194,
											"end": 197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 194,
											"end": 197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 169,
											"end": 232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 169,
											"end": 232,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 169,
											"end": 232,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 169,
											"end": 232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 169,
											"end": 232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 248,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 241,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 241,
											"end": 252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 241,
											"end": 252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 83,
											"end": 259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 83,
											"end": 259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 83,
											"end": 259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 83,
											"end": 259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 541,
											"end": 890,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 541,
											"end": 890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 577,
											"end": 581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 599,
											"end": 608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 632,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 622,
											"end": 884,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 622,
											"end": 884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 642,
											"end": 644,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 638,
											"end": 639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 638,
											"end": 644,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 622,
											"end": 884,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 622,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 622,
											"end": 884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 673,
											"end": 674,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 669,
											"end": 670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 669,
											"end": 674,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 693,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 665,
											"end": 717,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 725,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 721,
											"end": 722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 721,
											"end": 726,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 745,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 717,
											"end": 765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 773,
											"end": 774,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 766,
											"end": 774,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 766,
											"end": 774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 784,
											"end": 790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 848,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 805,
											"end": 848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 816,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 812,
											"end": 813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 812,
											"end": 818,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 805,
											"end": 848,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 805,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 805,
											"end": 848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 834,
											"end": 837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 834,
											"end": 837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 834,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 834,
											"end": 837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 834,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 834,
											"end": 837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 834,
											"end": 837,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 834,
											"end": 837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 834,
											"end": 837,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 834,
											"end": 837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 834,
											"end": 837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 805,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 805,
											"end": 848,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 805,
											"end": 848,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 805,
											"end": 848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 865,
											"end": 869,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 871,
											"end": 872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 857,
											"end": 873,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 857,
											"end": 873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 857,
											"end": 873,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 857,
											"end": 873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 857,
											"end": 873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 857,
											"end": 873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 857,
											"end": 873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 857,
											"end": 873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 857,
											"end": 873,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 622,
											"end": 884,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 622,
											"end": 884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 646,
											"end": 649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 649,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 646,
											"end": 649,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 646,
											"end": 649,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 646,
											"end": 649,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 646,
											"end": 649,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 622,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 622,
											"end": 884,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 622,
											"end": 884,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 622,
											"end": 884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 622,
											"end": 884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 541,
											"end": 890,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 541,
											"end": 890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 541,
											"end": 890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 541,
											"end": 890,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 541,
											"end": 890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 265,
											"end": 535,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 265,
											"end": 535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 332,
											"end": 335,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 323,
											"end": 335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 323,
											"end": 335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 357,
											"end": 360,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 353,
											"end": 354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 353,
											"end": 360,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 346,
											"end": 465,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 346,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 346,
											"end": 465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 376,
											"end": 379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 376,
											"end": 379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 376,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 376,
											"end": 379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 376,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 376,
											"end": 379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 376,
											"end": 379,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 376,
											"end": 379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 376,
											"end": 379,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 376,
											"end": 379,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 376,
											"end": 379,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 400,
											"end": 401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 393,
											"end": 401,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 393,
											"end": 401,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 393,
											"end": 401,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 393,
											"end": 401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 393,
											"end": 401,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 346,
											"end": 465,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 346,
											"end": 465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 481,
											"end": 482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 474,
											"end": 482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 474,
											"end": 482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 474,
											"end": 482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 265,
											"end": 535,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 265,
											"end": 535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 265,
											"end": 535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 265,
											"end": 535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1709,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1377,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1502,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1538,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1525,
											"end": 1534,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1539,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1513,
											"end": 1539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1513,
											"end": 1539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1549,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1617,
											"end": 1618,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1606,
											"end": 1615,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1619,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1593,
											"end": 1599,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1549,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1549,
											"end": 1620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1549,
											"end": 1620,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1549,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1698,
											"end": 1700,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1687,
											"end": 1696,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1683,
											"end": 1701,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1680,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1630,
											"end": 1702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1702,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1630,
											"end": 1702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1709,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1709,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1709,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1709,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1709,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1715,
											"end": 1895,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1715,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1840,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1760,
											"end": 1761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1841,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 1864,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1850,
											"end": 1865,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 1888,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1881,
											"end": 1882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 2092,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1901,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 1944,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1978,
											"end": 1979,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1960,
											"end": 1980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 1980,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1960,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 1980,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 1980,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1994,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2012,
											"end": 2013,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1994,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1994,
											"end": 2014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1994,
											"end": 2014,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1994,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2014,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2038,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2035,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2030,
											"end": 2039,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2023,
											"end": 2039,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2023,
											"end": 2039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2058,
											"end": 2061,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2056,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2052,
											"end": 2062,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2085,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2049,
											"end": 2085,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2065,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2065,
											"end": 2083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2083,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2065,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2085,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2049,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 2092,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 2092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 2092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 2092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 2092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2331,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2098,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2137,
											"end": 2140,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2178,
											"end": 2183,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2160,
											"end": 2184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2160,
											"end": 2184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2160,
											"end": 2184,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2160,
											"end": 2184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2151,
											"end": 2184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2151,
											"end": 2184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2206,
											"end": 2272,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2199,
											"end": 2204,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2273,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2193,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2193,
											"end": 2296,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2276,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2276,
											"end": 2294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2294,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2276,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2193,
											"end": 2296,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2193,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2324,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2316,
											"end": 2321,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2331,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2331,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2331,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"solidityByExample/contract/011Loop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ForLoop(uint256)": "9cc8e419",
							"loop()": "a92100cb",
							"whileLoop()": "e7c898ef"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_x\",\"type\":\"uint256\"}],\"name\":\"ForLoop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"loop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whileLoop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solidityByExample/contract/011Loop.sol\":\"ForWhile\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"solidityByExample/contract/011Loop.sol\":{\"keccak256\":\"0x858294f1a71030105349ce636226dcefeab6a2f3fcffeda9a95284d329361019\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13bd0a8f4b21e78ab13c235bc185d27f884106dde2bfc06528aa0ebba93379ed\",\"dweb:/ipfs/QmevxBFp9nqZa2etcSYDxWn1rwarG29tUPGG2NNgm1E7YV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n  --> solidityByExample/contract/011Loop.sol:25:41:\n   |\n25 |     function loop() public pure returns(uint, uint) {\n   |                                         ^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 581,
					"file": "solidityByExample/contract/011Loop.sol",
					"start": 577
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n  --> solidityByExample/contract/011Loop.sol:25:47:\n   |\n25 |     function loop() public pure returns(uint, uint) {\n   |                                               ^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 587,
					"file": "solidityByExample/contract/011Loop.sol",
					"start": 583
				},
				"type": "Warning"
			}
		],
		"sources": {
			"solidityByExample/contract/011Loop.sol": {
				"ast": {
					"absolutePath": "solidityByExample/contract/011Loop.sol",
					"exportedSymbols": {
						"ForWhile": [
							110
						]
					},
					"id": 111,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ForWhile",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 110,
							"linearizedBaseContracts": [
								110
							],
							"name": "ForWhile",
							"nameLocation": "68:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "135:124:0",
										"statements": [
											{
												"assignments": [
													9
												],
												"declarations": [
													{
														"constant": false,
														"id": 9,
														"mutability": "mutable",
														"name": "numa",
														"nameLocation": "150:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 30,
														"src": "145:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 8,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "145:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 11,
												"initialValue": {
													"hexValue": "30",
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "157:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "145:13:0"
											},
											{
												"body": {
													"id": 26,
													"nodeType": "Block",
													"src": "198:34:0",
													"statements": [
														{
															"expression": {
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 22,
																	"name": "numa",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "212:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 23,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "220:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "212:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 25,
															"nodeType": "ExpressionStatement",
															"src": "212:9:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 16,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "185:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 17,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "190:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "185:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 27,
												"initializationExpression": {
													"assignments": [
														13
													],
													"declarations": [
														{
															"constant": false,
															"id": 13,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "178:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 27,
															"src": "173:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 12,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "173:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 15,
													"initialValue": {
														"hexValue": "30",
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "182:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "173:10:0"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 20,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "194:3:0",
														"subExpression": {
															"id": 19,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "194:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 21,
													"nodeType": "ExpressionStatement",
													"src": "194:3:0"
												},
												"nodeType": "ForStatement",
												"src": "169:63:0"
											},
											{
												"expression": {
													"id": 28,
													"name": "numa",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 9,
													"src": "248:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 7,
												"id": 29,
												"nodeType": "Return",
												"src": "241:11:0"
											}
										]
									},
									"functionSelector": "9cc8e419",
									"id": 31,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ForLoop",
									"nameLocation": "92:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "_x",
												"nameLocation": "105:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "100:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "100:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "99:9:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "129:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "129:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "128:6:0"
									},
									"scope": 110,
									"src": "83:176:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "313:222:0",
										"statements": [
											{
												"assignments": [
													37
												],
												"declarations": [
													{
														"constant": false,
														"id": 37,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "328:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 52,
														"src": "323:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 36,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "323:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 39,
												"initialValue": {
													"hexValue": "323535",
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "332:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_255_by_1",
														"typeString": "int_const 255"
													},
													"value": "255"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "323:12:0"
											},
											{
												"body": {
													"id": 48,
													"nodeType": "Block",
													"src": "362:103:0",
													"statements": [
														{
															"expression": {
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "376:3:0",
																"subExpression": {
																	"id": 43,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "376:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 45,
															"nodeType": "ExpressionStatement",
															"src": "376:3:0"
														},
														{
															"expression": {
																"id": 46,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "400:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 35,
															"id": 47,
															"nodeType": "Return",
															"src": "393:8:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 40,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "353:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "323536",
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "357:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_256_by_1",
															"typeString": "int_const 256"
														},
														"value": "256"
													},
													"src": "353:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 49,
												"nodeType": "WhileStatement",
												"src": "346:119:0"
											},
											{
												"expression": {
													"id": 50,
													"name": "x",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 37,
													"src": "481:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 35,
												"id": 51,
												"nodeType": "Return",
												"src": "474:8:0"
											}
										]
									},
									"functionSelector": "e7c898ef",
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "whileLoop",
									"nameLocation": "274:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "283:2:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "307:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "307:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:6:0"
									},
									"scope": 110,
									"src": "265:270:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "589:301:0",
										"statements": [
											{
												"assignments": [
													61
												],
												"declarations": [
													{
														"constant": false,
														"id": 61,
														"mutability": "mutable",
														"name": "numa",
														"nameLocation": "604:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 108,
														"src": "599:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 60,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "599:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 63,
												"initialValue": {
													"hexValue": "30",
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "611:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "599:13:0"
											},
											{
												"body": {
													"id": 106,
													"nodeType": "Block",
													"src": "651:233:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 74,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "669:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 75,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "673:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "669:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 79,
															"nodeType": "IfStatement",
															"src": "665:52:0",
															"trueBody": {
																"id": 78,
																"nodeType": "Block",
																"src": "675:42:0",
																"statements": [
																	{
																		"id": 77,
																		"nodeType": "Continue",
																		"src": "693:8:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 80,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "721:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "35",
																	"id": 81,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "725:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "721:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 85,
															"nodeType": "IfStatement",
															"src": "717:48:0",
															"trueBody": {
																"id": 84,
																"nodeType": "Block",
																"src": "727:38:0",
																"statements": [
																	{
																		"id": 83,
																		"nodeType": "Break",
																		"src": "745:5:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 86,
																	"name": "numa",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 61,
																	"src": "766:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 87,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "773:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "766:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 89,
															"nodeType": "ExpressionStatement",
															"src": "766:8:0"
														},
														{
															"assignments": [
																91
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 91,
																	"mutability": "mutable",
																	"name": "j",
																	"nameLocation": "789:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 106,
																	"src": "784:6:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 90,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "784:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 93,
															"initialValue": {
																"hexValue": "30",
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "793:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "784:10:0"
														},
														{
															"body": {
																"id": 100,
																"nodeType": "Block",
																"src": "820:28:0",
																"statements": [
																	{
																		"expression": {
																			"id": 98,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "834:3:0",
																			"subExpression": {
																				"id": 97,
																				"name": "j",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 91,
																				"src": "834:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 99,
																		"nodeType": "ExpressionStatement",
																		"src": "834:3:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 96,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 94,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "812:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "3130",
																	"id": 95,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "816:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "812:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 101,
															"nodeType": "WhileStatement",
															"src": "805:43:0"
														},
														{
															"expression": {
																"components": [
																	{
																		"id": 102,
																		"name": "numa",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 61,
																		"src": "865:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 103,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 91,
																		"src": "871:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 104,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "864:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"functionReturnParameters": 59,
															"id": 105,
															"nodeType": "Return",
															"src": "857:16:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 68,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "638:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "642:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "638:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 107,
												"initializationExpression": {
													"assignments": [
														65
													],
													"declarations": [
														{
															"constant": false,
															"id": 65,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "631:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 107,
															"src": "626:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 64,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "626:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 67,
													"initialValue": {
														"hexValue": "30",
														"id": 66,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "635:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "626:10:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "646:3:0",
														"subExpression": {
															"id": 71,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 65,
															"src": "646:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 73,
													"nodeType": "ExpressionStatement",
													"src": "646:3:0"
												},
												"nodeType": "ForStatement",
												"src": "622:262:0"
											}
										]
									},
									"functionSelector": "a92100cb",
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "loop",
									"nameLocation": "550:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "554:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "577:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "577:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "583:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "583:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "576:12:0"
									},
									"scope": 110,
									"src": "541:349:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 111,
							"src": "59:833:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:860:0"
				},
				"id": 0
			}
		}
	}
}